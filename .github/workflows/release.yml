# Module Release Workflow
name: Module Release Build

env:
  latest_manifest_url: "https://github.com/${{github.repository}}/releases/latest/download/module.json"
  release_download_url: "https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip"

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Install bun
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      #Install dependencies
      - name: Install dependencies
        run: bun install

      # Compile JavaScript and CSS
      - name: Build
        run: bun run prod

      # Modify "module.json" with values specific to the release.
      - name: Modify Module Manifest With Release-Specific Values
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{ github.event.release.tag_name }}
          manifest: ${{env.latest_manifest_url}}
          download: ${{env.release_download_url}}

      # Create a "module.zip" archive containing all the module's required files.
      - name: Create Module Archive
        run: |
          zip --recurse-paths ./module.zip  \
            LICENSE                         \
            module.json                     \
            share-media.mjs                 \
            share-media.css                 \
            languages/                      \
            templates/

      # Update the GitHub release with the manifest and module archive files.
      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
