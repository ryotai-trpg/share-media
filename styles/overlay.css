/* -------------------------------------------- */
/*  [INFO] "!important" is mandatory here as the overlay
/*  can be inserted in any application with any CSS theme applied.
/*  Also some systems/modules are not using CSS layouts
/*  thus overriding the overlay styles.
/* -------------------------------------------- */

@layer shm.layouts {
  #shm-overlay {
    /* -------------------------------------------- */
    /*  Show/Hide feature
    /* -------------------------------------------- */

    /*  Reset CSS  */
    all: unset !important;

    /*  Actual properties  */
    z-index: 9999 !important;
    position: absolute !important;
    display: none !important;
    opacity: 0 !important;
    transition: opacity 0.5s ease !important;

    /*  Not displaying until ".active"  */
    &.active {
      display: block flow !important;

      /*  Start CSS transition with ".show"  */
      &.show {
        opacity: 1 !important;
      }
    }

    /* -------------------------------------------- */
    /*  Layout
    /* -------------------------------------------- */

    > section {
      /*  Reset CSS  */
      all: unset !important;

      /*  Actual properties  */
      display: flex !important;
      flex-direction: column !important;
      flex-wrap: nowrap !important;
      gap: 0.5rem !important;
    }

    /*  "aside" starts hidden and is displayed when hovering ".drawer"  */
    .drawer {
      /*  Reset CSS  */
      all: unset !important;

      /*  Actual properties  */
      position: relative !important;
      display: flex !important;
      flex-direction: row !important;
      flex-wrap: wrap !important;
      align-items: center !important;
    }

    .drawer:hover > aside {
      opacity: 1 !important;
      visibility: visible !important;
      pointer-events: auto !important;
    }

    /*  "aside" is a submenu positionned absolute  */
    .drawer > aside {
      /*  Reset CSS  */
      all: unset !important;

      /*  Actual properties  */
      position: absolute !important;
      top: 0 !important;
      left: calc(100% + 0.5rem) !important;

      visibility: hidden !important;
      pointer-events: none !important;
      opacity: 0 !important;

      transition: opacity 0.5s ease !important;

      /*  Needed for filling the gap between ".drawer" and "aside"  */
      &::before {
        /*  Reset CSS  */
        all: unset !important;

        /*  Actual properties  */
        content: "" !important;
        position: absolute !important;
        top: 0 !important;
        left: -0.5rem !important;
        width: 0.5rem !important;
        height: 100% !important;
      }
    }

    /*  Right to left variant  */
    .right.drawer > aside {
      left: auto !important;
      right: calc(100% + 0.5rem) !important;

      &::before {
        left: auto !important;
        right: -0.5rem !important;
      }
    }
  }
}
